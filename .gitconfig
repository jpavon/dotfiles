[alias]
	# Commit history w pretty format
	hist = log --graph --pretty=format:'%Cred%h%Creset [%an]: %s %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative

	# View abbreviated SHA, description, and history graph of the latest 20 commits
	l = log --pretty=oneline -n 20 --graph --abbrev-commit

	type = cat-file -t
	dump = cat-file -p

	# View the current working tree status using the short format
	s = status -s

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"

	# Pull in remote changes for the current repository and all its submodules
	p = !"git pull; git submodule foreach git pull origin master"

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

	# Delete remote/local branch
	drb = push origin --delete
	dlb = branch -D

	# Clone a repository including all submodules
	c = clone --recursive

	# Commit all changes
	cam = !git add -A && git commit -am

	# Remove file from the current index
	unstage = reset HEAD --

	# Switch to a branch, creating it if necessary
	go = checkout
	gob = checkout -B

	# Undo a `git push`
	undopush = push -f origin HEAD^:master

	# Git Reset Commit
	rs = reset --soft HEAD~1
	rh = reset --hard HEAD~1

	# Merge branches, keeping historical existence of the merged branch
	m = merge --no-ff

	# Push to origin
	po = push origin
	pom = push origin master

	# Remove changes from a file
	rfile = checkout HEAD --

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[core]
	editor = subl -n -w
	autocrlf = false
	safecrlf = false
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes

[credential]
	helper = cache --timeout=3600

[color]
	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
	ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[format]
	pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
	conflictstyle = diff3

[push]
	# Use the Git 1.x.x default to avoid errors on machines with old Git
	# installations. To use `simple` instead, add this to your `~/.extra` file:
	# `git config --global push.default simple`. See http://git.io/mMah-w.
	default = matching
	# Make `git push` push relevant annotated tags when pushing branches out.
	followTags = true

# [branch "master"]
# 	# Use `origin` as the default remote on the `master` branch in all cases
# 	remote = origin
# 	merge = refs/heads/master
